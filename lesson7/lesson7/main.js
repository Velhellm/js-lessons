//==========================================Задание 1=============================================//

// 1.Написать функцию, которая принимает строку и выводит статистику о ней: количество букв, количество цифр и количество других знаков.



const str = "sdfASfsAFgbапоd1232b3?#@2кj3b5b23hыфаb5"; //создаём строку и с помощью методa .match и /regexp/ сортируем её на массивы: числа, буквы и прочие символы
    const sumNumbers = str.match(/[0-9]/g);
    const sumLetters = str.match(/[a-zа-яё]/gi);
    const allSign = str.match(/[^a-zа-яё0-9]/g)
    console.log(sumNumbers.length, sumLetters.length, allSign.length);  //выводим в консоль количество элементов в каждом массиве


//==========================================Задание 2=============================================//

// 2.Написать функцию, которая принимает двузначное число и возвращает его в текстовом виде. Например: 35 – тридцать пять, 89 – восемьдесят девять, 12 – двенадцать. 

// function textNumber(number) {  //создаём 3 массива: с единицами, с 11 до 19, с десятками
//     let first = ['','Один', 'Два', 'Три', 'Четыре', 'Пять', 'Шесть', 'Семь', 'Восемь', 'Девять'];
//     let second = ['Десять', 'Одинадцать', 'Двенадцать', 'Тринадцать', 'Четырнадцать', 'Пятнадцать', 'Шестнадцать', 'Семнадцать', 'Восемнадцать', 'Девятнадцать'];
//     let third = ['','','Двадцать', 'Тридцать', 'Сорок', 'Пятьдесят', 'Шестьдесят', 'Семьдесят', 'Восемьдесят', 'Девяносто'];

//     let fNum = Math.trunc(number / 10); //разбиваем введённое число на первое 
//     let sNum = number % 10; //и второе
//     if( number < 10 || number > 99){  //проверяем корректность введённого числа
//         alert(`Введено некорректное число`)
//     }
//     else if( number < 19){  //если число меньше 19, то
//         document.write(second[sNum])  //приравниваем к значению второго массива
//     }
//     else {
//         document.write(`${third[fNum]} ${first[sNum]}`) //иначе приравниваем первое число к значению 3го массива, а второе к значению первого массива
//     }
// } 

// textNumber(72)


//==========================================Задание 3=============================================//

// 3.Написать функцию, которая заменяет в полученной строке большие буквы на маленькие, маленькие – на большие, а цифры – на знак нижнего подчеркивания. 


    // function someCase(string){  //создаём функцию, которая принимает в себя "строку" и меняет регистр букв с помощью метода .replace
    // let anyCase = string.replace(/([A-Z])|([a-z])/g, (_, u, l) => (u ? u.toLowerCase() : l.toUpperCase()))
    // return anyCase.replace(/([0-9])/g, ('_')) //возвращаем значение anyCase и тут же меняем цифры на "_" с помощью того же метода .replace
    // } 

//==========================================Задание 4=============================================//

// 4.Написать функцию, которая преобразует названия css-стилей с дефисом в название в СamelСase стиле: font-size в fontSize, background-color в backgroundColor, text-align в textAlign.

// function camelCase(str) {    //создаём функцию, которая принимает в себя значение 'str' и преобразует названия свойств CSS в CamelCase с помощью метода replace
//     let anyCase = str.replace(/-(\w)/g, (s, l) => l.toUpperCase());
//     console.log(anyCase)
// }


//==========================================Задание 5=============================================//

//5. Написать функцию, которая принимает словосочетание и превращает его в аббревиатуру. Например: cascading style sheets в CSS, объектно-ориентированное программирование в ООП. 

// функция принимает значение 'text' и используя метод .split возвращает нам аббревиатуру 
// const makeAbbr = (text) => {
//     return text.split(' ').map(i => i[0].toUpperCase()).join('')
//     }



//==========================================Задание 6=============================================//

//6. Написать функцию, которая принимает любое количество строк, объединяет их в одну длинную строку и возвращает ее.

// const strInLine = (...strings) => [...strings].join(" "); //функция принимает в себя неограниченное количество строк, добавляет каждую строку в массив и выводит их одной строкой
// console.log(strInLine("Я", "учусь", "на", "разработчика"));




//==========================================Задание 7=============================================//

//7.  Написать функцию – калькулятор. Функция принимает строку с примером, определяет, какое действие необходимо выполнить (+ - * /), переводит операнды в числа, решает пример и возвращает результат.

//функция принимает в себя строку и с помощью встроенной функции eval возвращает значение выполненного кода, переданного в виде строки
// const calc = (string) => eval(string);

//==========================================Задание 8=============================================//

//8. Написать функцию, которая получает url и выводит подробную информацию о нем. Например: url “https://itstep.org/ua/about”, информация “протокол: https, домен: itstep.org, путь: /ua/about”

// function viewInfoURL(url) { //создаём функцию, которая принимает в себя домен 
//     let arr1;
//     let protocol;
//     let domain;
//     let arr2;
//     let way;
//     arr1 = url.split("://"); //разбивает его на составляющие с помощью метода .split до разделителя "//" и сохраняет их в переменные

//     protocol = arr1[0]; 
//     arr2 = arr1[1].split("/"); //по аналогии, до разделителя "/"
//     domain = arr2[0];

//     arr2.shift();
//     way = arr2.join("/");

//     return "Информация: \n протокол: " + protocol + "\n домен: " + domain + "\n путь: " + way;
// }  //возвращаем информацию в удобном нам формате 

// console.log(viewInfoURL('https://itstep.org/ua/about'))


//-------------------------------------------------------//


//решение в одну строку, через объект URL )))
// const parseURL = (url) => new URL(url);

//==========================================Задание 9=============================================//

//9. Написать функцию, которая принимает строку и разделитель и возвращает массив подстрок, разбитых с помощью указанного разделителя. Например: строка “10/08/2020”, разделитель “/”, результат: “10”, “08”, “2020”. Выполняя задание, не используйте функцию split().


// function dateSplit(str){ //создаём функцию и передаём ей дату в виде строки формата '08/01/2023'
//     return str.match(/([^/]+)/g); //возвращаем полученный массив с помощью метода .match через regexp исключая разделитель '/' 
// }
// console.log(dateSplit('08/01/2023'))


//==========================================Задание 10============================================//

//10.  Написать функцию вывода текста по заданному шаблону. Функция принимает первым параметром шаблон, в тексте которого может использоваться %, после символа % указывается индекс входного параметра. При выводе вместо %индекс необходимо вывести значение соответствующего входного параметра. Например: print(“Today is %1 %2.%3.%4”, “Monday”, 10, 8, 2020) должна вывести “Today is Monday 10.8.2020”.

// function printDate(template, ...values) {  //создаём функцию, которой передаём в массив шаблон в формате 'Today is %1 %2.%3.%4' и дату в формате дд.мм.гггг
//     [...values].forEach((item, index) => template = template.replace('%' + (index + 1), item));  //для каждого элемента в массиве, с помощью метода .replace меняем значение элемента % на переданное ранее значение  
//     return template; //возвращаем шаблон
// }
// console.log(printDate('Today is %1 %2.%3.%4', 'Sunday', 08, 1, 2023));